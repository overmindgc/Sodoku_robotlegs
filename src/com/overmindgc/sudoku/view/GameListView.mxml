<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="700" height="500"
		 xmlns:containers="com.dougmccune.containers.*">
	<fx:Script>
		<![CDATA[
			import com.overmindgc.lib.Consts;
			import com.overmindgc.lib.ImageLib;
			import com.overmindgc.sudoku.comps.GamePreviewComp;
			
			import mx.managers.PopUpManager;
			
			/**列表窗口标题文字*/
			[Bindable]
			private var titleText:String = "简单模式";
			
			/**游戏难度*/
			private var gameType:String = Consts.easyMode;
			
			/**
			 * 根据类型取得游戏列表数据
			 * */
			public function getGameListData(gameType:String,gameData:XMLList):void
			{
				this.gameType = gameType;
				
				switch(gameType)
				{
					case Consts.easyMode:
					{
						titleText = "简单模式";
						generateGameList(gameData);
						break;
					}
					case Consts.normalMode:
					{
						titleText = "普通模式";
						generateGameList(gameData);
						break;
					}
					case Consts.hardMode:
					{
						titleText = "高级模式";
						generateGameList(gameData);
						break;
					}
				}
			}
			
			protected function generateGameList(gameXmlList:XMLList):void
			{
				if(coverflow.numChildren > 0)
				{
					coverflow.removeAllChildren();
				}
				for each(var gameXml:XML in gameXmlList)
				{
					var gp:GamePreviewComp = new GamePreviewComp();
					gp.gameXml = gameXml;
					coverflow.addChild(gp);
				}
			}
			
			
			
			protected function btnPrevious_clickHandler(event:MouseEvent):void
			{
				if(coverflow.selectedIndex > 0)
				{
					coverflow.selectedIndex = coverflow.selectedIndex - 1;
				} else
				{
					coverflow.selectedIndex = coverflow.numChildren - 1;
				}
			}
			
			protected function btnNext_clickHandler(event:MouseEvent):void
			{
				if(coverflow.selectedIndex < coverflow.numChildren - 1)
				{
					coverflow.selectedIndex = coverflow.selectedIndex + 1;
				} else
				{
					coverflow.selectedIndex = 0;
				}
			}
		]]>
	</fx:Script>
	<mx:Canvas id="titleWinList"
				width="100%" height="100%">
		<s:BorderContainer width="100%" height="100%"
						   borderWeight="5"
						   backgroundImage="@Embed('assets/images/background.png')">
			<mx:Label id="labType" 
					 x="10"
					 y="10"
					 text="{titleText}" 
					 fontSize="14"/>
			<s:Image id="imgClose" 
					 x="{titleWinList.width - imgClose.width - 10}"
					 y="5"
				     source="{ImageLib.closeImg}" 
				     buttonMode="true"
					 toolTip="关闭"/>
			<s:Image id="imgPrevious"
					 x="20"
					 y="{(titleWinList.height - imgPrevious.height) / 2}"
					 source="{ImageLib.arrowLeftImg}"
					 buttonMode="true"
					 toolTip="向左翻页"
					 click="btnPrevious_clickHandler(event)" />
			<containers:CarouselContainer id="coverflow" 
										  x="{(this.width - coverflow.width) / 2}"
										  y="0"
										  width="100%" height="100%" 
										  horizontalGap="80" 
										  segments="6" reflectionEnabled="true">
			</containers:CarouselContainer>
			<s:Image id="imgNext"
					 x="{titleWinList.width - imgNext.width - 20}"
					 y="{(titleWinList.height - imgNext.height) / 2}"
					 source="{ImageLib.arrowRightImg}"
					 buttonMode="true"
					 toolTip="向右翻页"
					 click="btnNext_clickHandler(event)" />
		</s:BorderContainer>
	</mx:Canvas>
</s:Group>
